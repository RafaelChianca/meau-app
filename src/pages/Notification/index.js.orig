<<<<<<< HEAD
import React, { useEffect, useState } from 'react';
import { StatusBar, Keyboard, Text } from 'react-native';
import { useDispatch, useSelector } from 'react-redux';
import { Container, Box, Title, Group, Linha } from './styles';
import FormTextInput from '../../atomic/molecules/FormTextInput';
import CustomButton from '../../atomic/atoms/CustomButton';
import { useNavigation } from '@react-navigation/native';
import CustomHeader from '../../atomic/molecules/CustomHeader';
import { loginRequested } from '../../store/actions/profile';
import { listNotifRequested } from '../../store/actions/notif';


export default function Notification({...rest}) {
    
    const loading = useSelector(state => state.profile.loading);

    const navigation = useNavigation();
    const dispatch = useDispatch();

    const notifList = useSelector(state => state.notif.notifList);
    const user = useSelector(state => state.profile.user);

    useEffect(() => {
        dispatch(listNotifRequested(1, 20, user.id));
    }, [])

    const handlePressYes = async () => {
        // dispatch(adoptPetRequested(pet.id, user.id));
        console.log("Pode adotar");
    };
    const handlePressNo = async () => {
        console.log("Não pode adotar");
    };

    const onPressRightIcon = async () => {
        navigation.navigate('Notification', {});
    };
=======
import React from 'react';
import { StatusBar } from 'react-native';
import { Container, Title, ContentContainer } from './styles';
import CustomHeader from '../../atomic/molecules/CustomHeader';
import NotificationList from '../../atomic/organisms/NotificationList';

export default function Notification() {
>>>>>>> dev

    return(
        <Container {...rest}>
            <StatusBar
                animated
                backgroundColor={'#88c9bf'}
                barStyle={'light-content'}
            />
<<<<<<< HEAD
            <CustomHeader leftIcon='back' label='Notificações' rightIcon="notification" onPressRightIcon={onPressRightIcon} style={{backgroundColor: '#cfe9e5'}} />
            <Box>

                {/*notifList.size()>1 &&*/ notifList.filter(item => item.userID === user.id)?.map((item) => {
                return (
                    <>
                        <Title>{item.idUser}</Title>
                        <Text style={{marginBottom: 10}}>Gostaria de adotar o {item.idPet}</Text>
                        <Group>
                            <CustomButton style={{width: 'auto', padding: 10, marginRight: 5}} label="Aceitar" onPress={handlePressYes}/>
                            <CustomButton style={{width: 'auto', padding: 10, backgroundColor: '#e6e7e8'}} label="Recusar" onPress={handlePressNo}/>
                        </Group>
                        <Linha/>
                    </>
                )
                })}
            </Box>
            
=======
            <CustomHeader
                label='Notificações'
                leftIcon="menu"
                style={{backgroundColor: '#cfe9e5'}}
            />
            <ContentContainer>
                <NotificationList />
            </ContentContainer>
>>>>>>> dev
        </Container>
    );
}